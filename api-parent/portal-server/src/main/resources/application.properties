#声明服务端口
server.port=8084

#声明服务名称
spring.application.name=portal-server
#注明自己的服务注册中心的地址
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
#client 在初始化阶段是否强行注册到注册中心
eureka.client.should-enforce-registration-at-init=true

#定义链路追踪服务器地址
spring.zipkin.base-url=http://localhost:9411
#表示以 100% 的概率将链路的数据上传给 Zipkin Server ， 在默认情况下 ， 该值为0.1
spring.sleuth.sampler.probability=1.0

#log4j2配置
logging.config=classpath:log4j2-dev.xml

#######Druid数据源配置######
## JDBC配置
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/distressed_asset?characterEncoding=utf8&zeroDateTimeBehavior=convertToNull
spring.datasource.username=root
spring.datasource.password=123147

# 连接池配置
spring.datasource.druid.initialSize=20
spring.datasource.druid.minIdle=20
spring.datasource.druid.maxActive=40
# 配置获取连接等待超时的时间
spring.datasource.druid.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.minEvictableIdleTimeMillis=300000
spring.datasource.druid.validationQuery=SELECT 1 FROM DUAL
spring.datasource.druid.testWhileIdle=true
spring.datasource.druid.testOnBorrow=false
spring.datasource.druid.testOnReturn=false

# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙,防止sql注入
spring.datasource.druid.filters=stat,wall
spring.datasource.druid.filter.stat.enabled=true
spring.datasource.druid.filter.stat.log-slow-sql=true
spring.datasource.druid.filter.stat.slow-sql-millis=2000

######Druid监控配置######
#是否启用StatFilter默认值false
spring.datasource.druid.web-stat-filter.enabled=true
spring.datasource.druid.web-stat-filter.url-pattern=/*
#哪些资源配置监控：主要只静态资源和监控地址本身
spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*

# 是否启用StatViewServlet（监控页面）默认值为false（考虑到安全问题默认并未启动，如需启用建议设置密码或白名单以保障安全）
spring.datasource.druid.stat-view-servlet.enabled=true
# IP 白名单
spring.datasource.druid.stat-view-servlet.allow=127.0.0.1
#IP 黑名单
# spring.datasource.druid.stat-view-servlet.deny=192.168.0.101
# 监控地址,默认 /druid/*
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
# druid帐号密码
spring.datasource.druid.stat-view-servlet.login-username=druid
spring.datasource.druid.stat-view-servlet.login-password=druid123123

## Mybatis 配置（持久层框架自己选择）
#mybatis.typeAliasesPackage=com.distressed.asset.portal.mapping
mybatis.mapperLocations=classpath*:mapping/*.xml
#开启mybatis驼峰命名，这样可以将mysql中带有下划线的映射成驼峰命名的字段
mybatis.configuration.map-underscore-to-camel-case=true
#允许同名实体注册
spring.main.allow-bean-definition-overriding=true

#redis配置
spring.cache.type=redis
spring.redis.host=localhost
spring.redis.port=6379
spring.redis.password=hi,coder
## 连接超时时间（毫秒）
spring.redis.timeout=1200
# redis连接池配置【使用Lettuce 】
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.lettuce.pool.max-active=200
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.lettuce.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.lettuce.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.lettuce.pool.min-idle=0

#分页插件
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql
pagehelper.page-size-zero=true

#数据库加密解密特殊字段开关和密钥
sys.encrypt.switch=1
sys.encrypt.key=zwyhAESC20191202

# 添加访问路径
distressed.asset.file.manager.url=http://localhost:8086
# 显示文件路径
distressed.asset.file.manager.show=http://localhost:8086/file/show/












